name: pnpm-release-changeset
on:
  workflow_call:
    inputs:
      pnpm-version:
        type: string
        required: false

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: "Start X Virtual Frame Buffer"
        run: "echo \"DISPLAY=:99.0\" >> $GITHUB_ENV && Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.CI_GITHUB_TOKEN }}
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm

      - name: Cache Playwright Browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install playwright browsers
        run: pnpx playwright install --with-deps chromium

      - name: Install Dependencies
        run: pnpm install
      - run: pnpm build
      - name: update .npmrc with token
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          commit: 'chore: version packages'
          version: pnpm run version
          publish: pnpm run release
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

      # - name: Send a Slack notification if a publish happens
      #   if: steps.changesets.outputs.published == 'true'
      #   # You can do something when a publish happens.
      #   run: my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was published!"
